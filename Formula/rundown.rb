# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Rundown < Formula
  desc "Rundown runs Markdown files, making them powerful and pretty console applications"
  homepage "https://github.com/elseano/rundown"
  version "0.4.0-beta.33"
  license "MIT"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/elseano/rundown/releases/download/v0.4.0-beta.33/rundown_0.4.0-beta.33_darwin_x86_64.tar.gz"
      sha256 "6b7f49bdd662e80d33294d34216dd642147391e4ec6a46045aa36b0eb32d7489"

      def install
        bin.install "rundown"

        output = Utils.safe_popen_read("#{bin}/rundown", "--completions", "bash")
        (bash_completion/"rundown").write output

        output = Utils.safe_popen_read("#{bin}/rundown", "--completions", "zsh")
        (zsh_completion/"rundown").write output

        output = Utils.safe_popen_read("#{bin}/rundown", "--completions", "fish")
        (fish_completion/"rundown").write output
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/elseano/rundown/releases/download/v0.4.0-beta.33/rundown_0.4.0-beta.33_darwin_arm64.tar.gz"
      sha256 "c2323b63f038a76882af5253938f03e5a53212586755b5145cdc1e67f3ecba3e"

      def install
        bin.install "rundown"

        output = Utils.safe_popen_read("#{bin}/rundown", "--completions", "bash")
        (bash_completion/"rundown").write output

        output = Utils.safe_popen_read("#{bin}/rundown", "--completions", "zsh")
        (zsh_completion/"rundown").write output

        output = Utils.safe_popen_read("#{bin}/rundown", "--completions", "fish")
        (fish_completion/"rundown").write output
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/elseano/rundown/releases/download/v0.4.0-beta.33/rundown_0.4.0-beta.33_linux_x86_64.tar.gz"
      sha256 "fb5c9c924d44b2cba31a6b54c5fbe8b0c3b415d8e0cf5ba419c46aed559502cc"

      def install
        bin.install "rundown"

        output = Utils.safe_popen_read("#{bin}/rundown", "--completions", "bash")
        (bash_completion/"rundown").write output

        output = Utils.safe_popen_read("#{bin}/rundown", "--completions", "zsh")
        (zsh_completion/"rundown").write output

        output = Utils.safe_popen_read("#{bin}/rundown", "--completions", "fish")
        (fish_completion/"rundown").write output
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/elseano/rundown/releases/download/v0.4.0-beta.33/rundown_0.4.0-beta.33_linux_arm64.tar.gz"
      sha256 "3e5f24d2d496e8b0878cb258cb43da8afa4f113a42725e93bb45b47a18130344"

      def install
        bin.install "rundown"

        output = Utils.safe_popen_read("#{bin}/rundown", "--completions", "bash")
        (bash_completion/"rundown").write output

        output = Utils.safe_popen_read("#{bin}/rundown", "--completions", "zsh")
        (zsh_completion/"rundown").write output

        output = Utils.safe_popen_read("#{bin}/rundown", "--completions", "fish")
        (fish_completion/"rundown").write output
      end
    end
  end

  test do
    assert_match "rundown version #{version}", shell_output("#{bin}/rundown --version")
  end
end
