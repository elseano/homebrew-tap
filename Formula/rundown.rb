# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Rundown < Formula
  desc "Rundown runs Markdown files, making them powerful and pretty console applications"
  homepage "https://github.com/elseano/rundown"
  version "0.4.0-beta.32"
  license "MIT"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/elseano/rundown/releases/download/v0.4.0-beta.32/rundown_0.4.0-beta.32_darwin_x86_64.tar.gz"
      sha256 "d4b674f3a44f4a0b3d9bbca81f8f9e22bf9a1109dcecdc64ef2a7394d516c3b5"

      def install
        bin.install "rundown"

        output = Utils.safe_popen_read("#{bin}/rundown", "--completions", "bash")
        (bash_completion/"rundown").write output

        output = Utils.safe_popen_read("#{bin}/rundown", "--completions", "zsh")
        (zsh_completion/"rundown").write output

        output = Utils.safe_popen_read("#{bin}/rundown", "--completions", "fish")
        (fish_completion/"rundown").write output
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/elseano/rundown/releases/download/v0.4.0-beta.32/rundown_0.4.0-beta.32_darwin_arm64.tar.gz"
      sha256 "84c76eec4055a2e4bab422261f784d705e0c23f0ddf8707c93c53882ffe51703"

      def install
        bin.install "rundown"

        output = Utils.safe_popen_read("#{bin}/rundown", "--completions", "bash")
        (bash_completion/"rundown").write output

        output = Utils.safe_popen_read("#{bin}/rundown", "--completions", "zsh")
        (zsh_completion/"rundown").write output

        output = Utils.safe_popen_read("#{bin}/rundown", "--completions", "fish")
        (fish_completion/"rundown").write output
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/elseano/rundown/releases/download/v0.4.0-beta.32/rundown_0.4.0-beta.32_linux_x86_64.tar.gz"
      sha256 "a77a7ac667682f08c2172c8a68bb202ade937b27c7023bb7ddf90b7dd2d540d3"

      def install
        bin.install "rundown"

        output = Utils.safe_popen_read("#{bin}/rundown", "--completions", "bash")
        (bash_completion/"rundown").write output

        output = Utils.safe_popen_read("#{bin}/rundown", "--completions", "zsh")
        (zsh_completion/"rundown").write output

        output = Utils.safe_popen_read("#{bin}/rundown", "--completions", "fish")
        (fish_completion/"rundown").write output
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/elseano/rundown/releases/download/v0.4.0-beta.32/rundown_0.4.0-beta.32_linux_arm64.tar.gz"
      sha256 "97ed251bdc10585b4a7cc03ac15c367af05ce6f4f83ceb0b4cc6196073ebcff8"

      def install
        bin.install "rundown"

        output = Utils.safe_popen_read("#{bin}/rundown", "--completions", "bash")
        (bash_completion/"rundown").write output

        output = Utils.safe_popen_read("#{bin}/rundown", "--completions", "zsh")
        (zsh_completion/"rundown").write output

        output = Utils.safe_popen_read("#{bin}/rundown", "--completions", "fish")
        (fish_completion/"rundown").write output
      end
    end
  end

  test do
    assert_match "rundown version #{version}", shell_output("#{bin}/rundown --version")
  end
end
