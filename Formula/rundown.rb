# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Rundown < Formula
  desc "Rundown runs Markdown files, making them powerful and pretty console applications"
  homepage "https://github.com/elseano/rundown"
  version "0.4.0-beta.36"
  license "MIT"

  on_macos do
    if Hardware::CPU.arm?
      url "https://github.com/elseano/rundown/releases/download/v0.4.0-beta.36/rundown_0.4.0-beta.36_darwin_arm64.tar.gz"
      sha256 "26f68b6fe89c39f7cbeecb019e7fc6379c0be51dd03c1e795380d05af72cf787"

      def install
        bin.install "rundown"

        output = Utils.safe_popen_read("#{bin}/rundown", "--completions", "bash")
        (bash_completion/"rundown").write output

        output = Utils.safe_popen_read("#{bin}/rundown", "--completions", "zsh")
        (zsh_completion/"rundown").write output

        output = Utils.safe_popen_read("#{bin}/rundown", "--completions", "fish")
        (fish_completion/"rundown").write output
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/elseano/rundown/releases/download/v0.4.0-beta.36/rundown_0.4.0-beta.36_darwin_x86_64.tar.gz"
      sha256 "d249b6f3083fff8c3510a994b10cf08a775a500de64bd6ed792ed9705377f632"

      def install
        bin.install "rundown"

        output = Utils.safe_popen_read("#{bin}/rundown", "--completions", "bash")
        (bash_completion/"rundown").write output

        output = Utils.safe_popen_read("#{bin}/rundown", "--completions", "zsh")
        (zsh_completion/"rundown").write output

        output = Utils.safe_popen_read("#{bin}/rundown", "--completions", "fish")
        (fish_completion/"rundown").write output
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/elseano/rundown/releases/download/v0.4.0-beta.36/rundown_0.4.0-beta.36_linux_x86_64.tar.gz"
      sha256 "3b43eca91a7c4f5d2405f527141e20805e41121b6aa94d3d961f1203a34b18e0"

      def install
        bin.install "rundown"

        output = Utils.safe_popen_read("#{bin}/rundown", "--completions", "bash")
        (bash_completion/"rundown").write output

        output = Utils.safe_popen_read("#{bin}/rundown", "--completions", "zsh")
        (zsh_completion/"rundown").write output

        output = Utils.safe_popen_read("#{bin}/rundown", "--completions", "fish")
        (fish_completion/"rundown").write output
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/elseano/rundown/releases/download/v0.4.0-beta.36/rundown_0.4.0-beta.36_linux_arm64.tar.gz"
      sha256 "ceba179db4b69187b20618a1c29287379d4f025d74f43cb205b3ac0d5919186f"

      def install
        bin.install "rundown"

        output = Utils.safe_popen_read("#{bin}/rundown", "--completions", "bash")
        (bash_completion/"rundown").write output

        output = Utils.safe_popen_read("#{bin}/rundown", "--completions", "zsh")
        (zsh_completion/"rundown").write output

        output = Utils.safe_popen_read("#{bin}/rundown", "--completions", "fish")
        (fish_completion/"rundown").write output
      end
    end
  end

  test do
    assert_match "rundown version #{version}", shell_output("#{bin}/rundown --version")
  end
end
