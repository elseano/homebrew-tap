# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Rundown < Formula
  desc "Rundown runs Markdown files, making them powerful and pretty console applications"
  homepage "https://github.com/elseano/rundown"
  version "0.4.0-beta.31"
  license "MIT"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/elseano/rundown/releases/download/v0.4.0-beta.31/rundown_0.4.0-beta.31_darwin_x86_64.tar.gz"
      sha256 "282804775f8ea8e5d885d4802e801e0c371da5bd18345cefa5480756e4edb5c7"

      def install
        bin.install "rundown"

        output = Utils.safe_popen_read("#{bin}/rundown", "--completions", "bash")
        (bash_completion/"rundown").write output

        output = Utils.safe_popen_read("#{bin}/rundown", "--completions", "zsh")
        (zsh_completion/"rundown").write output

        output = Utils.safe_popen_read("#{bin}/rundown", "--completions", "fish")
        (fish_completion/"rundown").write output
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/elseano/rundown/releases/download/v0.4.0-beta.31/rundown_0.4.0-beta.31_darwin_arm64.tar.gz"
      sha256 "4a205e0a1a0defab845bb11df4990b86cc590f6b0168b3dcf1a4f2fbe347e952"

      def install
        bin.install "rundown"

        output = Utils.safe_popen_read("#{bin}/rundown", "--completions", "bash")
        (bash_completion/"rundown").write output

        output = Utils.safe_popen_read("#{bin}/rundown", "--completions", "zsh")
        (zsh_completion/"rundown").write output

        output = Utils.safe_popen_read("#{bin}/rundown", "--completions", "fish")
        (fish_completion/"rundown").write output
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/elseano/rundown/releases/download/v0.4.0-beta.31/rundown_0.4.0-beta.31_linux_x86_64.tar.gz"
      sha256 "bbc4232584ec96de810687d16edc5a8f6594bc47efe803c77757a93d59440fff"

      def install
        bin.install "rundown"

        output = Utils.safe_popen_read("#{bin}/rundown", "--completions", "bash")
        (bash_completion/"rundown").write output

        output = Utils.safe_popen_read("#{bin}/rundown", "--completions", "zsh")
        (zsh_completion/"rundown").write output

        output = Utils.safe_popen_read("#{bin}/rundown", "--completions", "fish")
        (fish_completion/"rundown").write output
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/elseano/rundown/releases/download/v0.4.0-beta.31/rundown_0.4.0-beta.31_linux_arm64.tar.gz"
      sha256 "bb632082715281f26e70242645e26ef926eed277e9287516c0d07d568e30c93f"

      def install
        bin.install "rundown"

        output = Utils.safe_popen_read("#{bin}/rundown", "--completions", "bash")
        (bash_completion/"rundown").write output

        output = Utils.safe_popen_read("#{bin}/rundown", "--completions", "zsh")
        (zsh_completion/"rundown").write output

        output = Utils.safe_popen_read("#{bin}/rundown", "--completions", "fish")
        (fish_completion/"rundown").write output
      end
    end
  end

  test do
    assert_match "rundown version #{version}", shell_output("#{bin}/rundown --version")
  end
end
